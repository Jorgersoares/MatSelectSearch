{"version":3,"file":"mat-select-search.js","sources":["../../../projects/mat-select-search/src/lib/searcher.service.ts","../../../projects/mat-select-search/src/lib/mat-select-search.component.ts","../../../projects/mat-select-search/src/lib/mat-select-search.component.html","../../../projects/mat-select-search/src/lib/mat-select-search.module.ts","../../../projects/mat-select-search/src/public-api.ts","../../../projects/mat-select-search/src/mat-select-search.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Searcher {\n  private list: Record<string, string>[] = [];\n  private searchProperty = '';\n  private searchText = '';\n  private previousSearchText = '';\n  private previousInputtype = '';\n  private filteredList: Record<string, string>[] = [];\n  private previousFilteredList: Record<string, string>[] = [];\n  private canReturnPreviousFilteredList = true;\n\n  initSearch(list: Record<string, string>[], searchProperties: string[]): void {\n    if (searchProperties.length > 1) {\n      this.list = list.map(item => (\n        {...item, concatedValues: this.concateValues(item, searchProperties)}\n      ));\n      this.searchProperty = 'concatedValues';\n    } else {\n      this.list = list;\n      this.searchProperty = searchProperties[0];\n    }\n  }\n\n  filterList(inputEvent: InputEvent): Record<string, string>[] | undefined {\n    if (inputEvent.data === ' ') { return; }\n    const searchText = (inputEvent.target as HTMLInputElement).value;\n    const removeWhitespaces = (text: string) => text.split(' ').join('');\n    const searchTextInLowerCase = removeWhitespaces(searchText).toLocaleLowerCase();\n    this.searchText = searchTextInLowerCase;\n\n    const list = this.getList();\n    this.previousSearchText = searchTextInLowerCase;\n    this.previousInputtype = inputEvent.inputType;\n    if (!list) { return this.previousFilteredList; }\n    this.filteredList = list.filter(item =>\n      removeWhitespaces(item[this.searchProperty]).toLowerCase().includes(this.searchText));\n    return this.filteredList;\n  }\n\n  private concateValues(item: Record<string, string>, searchProperties: string[]): string {\n    let concatedValues = '';\n    searchProperties.forEach(property => concatedValues += item[property]);\n    return concatedValues;\n  }\n\n  private getList(): Record<string, string>[] | undefined {\n    if (this.previousSearchText && this.searchText.includes(this.previousSearchText)) {\n      if (this.canReturnPreviousFilteredList) { this.previousFilteredList = this.filteredList; }\n      this.canReturnPreviousFilteredList = true;\n      return this.filteredList;\n    }\n\n    const isLastTextFromPaste = this.previousInputtype === 'insertFromPaste';\n    const canReturnPreviousFilteredList = this.isBackSpacedLastChar() &&\n     !isLastTextFromPaste && this.canReturnPreviousFilteredList;\n\n    if (canReturnPreviousFilteredList) {\n      this.canReturnPreviousFilteredList = false;\n      return;\n    }\n    return this.list;\n  }\n\n  private isBackSpacedLastChar(): boolean {\n    const isTextDecrementedBy1 = this.previousSearchText.length - this.searchText.length === 1;\n    const lastChar = this.previousSearchText.charAt(this.previousSearchText.length - 1);\n    const concatedText = this.searchText + lastChar;\n    return isTextDecrementedBy1 && concatedText === this.previousSearchText;\n  }\n}\n","import { AfterViewInit, Component, ElementRef, EventEmitter, Inject, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatSelect } from '@angular/material/select';\nimport { Subscription } from 'rxjs';\nimport { Searcher } from './searcher.service';\n\n@Component({\n  selector: 'lib-mat-select-search',\n  templateUrl: './mat-select-search.component.html',\n  styleUrls: [ './mat-select-search.scss' ]\n})\nexport class MatSelectSearchComponent implements AfterViewInit, OnDestroy {\n  @Input() list: Record<string, string>[] = [];\n  @Input() searchProperties: string[] = [];\n  @Input() clearSearchInput = false;\n  @Output() filtered = new EventEmitter<Record<string, string>[]>();\n  @ViewChild('input', { read: ElementRef, static: true }) element!: ElementRef;\n  isLoading = false;\n  private filteredList: Record<string, string>[] | undefined = [];\n  private fullList: Record<string, string>[] = [];\n  private hasFilteredBefore = false;\n  private subscriptions = new Subscription();\n\n  constructor(\n    @Inject(MatSelect) private matSelect: MatSelect,\n      private searcher: Searcher\n    ) { }\n\n  ngAfterViewInit(): void {\n    this.fullList = this.list;\n    this.searcher.initSearch(this.list, this.searchProperties);\n    this.subscriptions\n      .add(this.matSelect.openedChange\n      .subscribe(() => {\n        const input = this.element.nativeElement;\n        input.focus();\n        if ((this.filteredList && this.filteredList.length === 0 && this.hasFilteredBefore) || this.clearSearchInput) {\n          input.value = '';\n          this.filtered.emit(this.fullList);\n        }\n      })\n      .add(this.filtered.subscribe(() => this.isLoading = false))\n    );\n  }\n\n  filterList(event: Event): void {\n    const inputEvent = event as InputEvent;\n    this.hasFilteredBefore = true;\n    this.isLoading = true;\n    this.filteredList = this.searcher.filterList(inputEvent);\n\n    if (!this.filteredList) {\n      this.isLoading = false;\n      return;\n    }\n\n    const listWithoutConcatedValues = this.filteredList.map(item => {\n      const itemCopy = {...item};\n      delete itemCopy['concatedValues'];\n      return itemCopy;\n    });\n    this.filtered.emit(listWithoutConcatedValues);\n  }\n\n  ngOnDestroy(): void { this.subscriptions.unsubscribe(); }\n}\n","<div class=\"flex-container\">\n  <input\n    #input\n    id=\"input\"\n    placeholder=\"Search\"\n    (input)=\"filterList($event)\"\n    (keydown)=\"$event.stopPropagation()\">\n    <div class=\"spinner\">\n      <mat-spinner *ngIf=\"isLoading\" [diameter]=\"25\"></mat-spinner>\n    </div>\n</div>\n<mat-divider></mat-divider>\n","import { NgModule } from '@angular/core';\nimport { MatSelectSearchComponent } from './mat-select-search.component';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatDividerModule} from '@angular/material/divider';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    MatSelectSearchComponent\n  ],\n  imports: [\n    MatProgressSpinnerModule,\n    MatDividerModule,\n    CommonModule\n  ],\n  exports: [\n    MatSelectSearchComponent\n  ]\n})\nexport class MatSelectSearchModule { }\n","/*\n * Public API Surface of mat-select-search\n */\n\nexport * from './lib/searcher.service';\nexport * from './lib/mat-select-search.component';\nexport * from './lib/mat-select-search.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}